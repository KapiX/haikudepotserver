<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!--
    This provides the database source; pooled.
    -->

    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="maximumPoolSize" value="${jdbc.pool.maximumpoolsize:8}" />
        <property name="minimumIdle" value="${jdbc.pool.minimumidle:1}" />
    </bean>

    <!--
    This manages database migrations (upgrades)
    -->

    <bean class="org.haiku.haikudepotserver.support.db.migration.ManagedDatabase" init-method="init">
        <property name="dataSource" ref="dataSource"/>
        <property name="migrate" value="${flyway.migrate}"/>
        <property name="schema" value="haikudepot"/>
        <property name="validateOnMigrate" value="${flyway.validateOnMigrate:true}"/>
    </bean>

    <bean class="org.haiku.haikudepotserver.support.db.migration.ManagedDatabase" init-method="init">
        <property name="dataSource" ref="dataSource"/>
        <property name="migrate" value="${flyway.migrate}"/>
        <property name="schema" value="captcha"/>
        <property name="validateOnMigrate" value="${flyway.validateOnMigrate:true}"/>
    </bean>

    <!--
    This manages the cayenne object-relational setup
    -->

    <bean id="haikuDepotServerRuntime" class="org.apache.cayenne.configuration.server.ServerRuntime">
        <constructor-arg index="0" value="cayenne-haikudepotserver.xml"/>
        <constructor-arg index="1">
            <list>
                <bean class="org.haiku.haikudepotserver.support.cayenne.ConfigureDataSourceModule">
                    <property name="dataSource" ref="dataSource"/>
                </bean>
                <bean class="org.haiku.haikudepotserver.support.cayenne.ConfigureCachingModule">
                    <property name="queryCacheSize" value="${cayenne.query.cache.size:250}"></property>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <!--
    LDAP
    -->

    <bean class="org.haiku.haikudepotserver.support.ldap.LdapConnectionPoolFactory">
        <property name="host" value="${ldap.host:}"/>
        <property name="port" value="${ldap.port:}"/>
        <property name="userDn" value="${ldap.user.dn:}"/>
        <property name="password" value="${ldap.password:}"/>
    </bean>

    <!--
    Setup for query cache removal.  The filter will install itself into the Cayenne runtime and the listeners
    will keep track of which query cache groups are to be dropped.
    -->

    <bean class="org.haiku.haikudepotserver.support.cayenne.QueryCacheRemoveGroupDataChannelFilter"/>

    <bean class="org.haiku.haikudepotserver.support.cayenne.QueryCacheRemoveGroupListener">
        <property name="group" value="#{T(org.haiku.haikudepotserver.dataobjects.HaikuDepot.CacheGroup).NATURAL_LANGUAGE.name()}"/>
        <property name="entityClasses">
            <list>
                <value>org.haiku.haikudepotserver.dataobjects.UserRating</value>
                <value>org.haiku.haikudepotserver.dataobjects.PkgVersionLocalization</value>
            </list>
        </property>
    </bean>

    <bean class="org.haiku.haikudepotserver.support.cayenne.QueryCacheRemoveGroupListener">
        <property name="group" value="#{T(org.haiku.haikudepotserver.dataobjects.HaikuDepot.CacheGroup).USER.name()}"/>
        <property name="entityClass" value="org.haiku.haikudepotserver.dataobjects.User"/>
    </bean>

    <bean class="org.haiku.haikudepotserver.support.cayenne.QueryCacheRemoveGroupListener">
        <property name="group" value="#{T(org.haiku.haikudepotserver.dataobjects.HaikuDepot.CacheGroup).PKG_USER_RATING_AGGREGATE.name()}"/>
        <property name="entityClass" value="org.haiku.haikudepotserver.dataobjects.PkgUserRatingAggregate"/>
    </bean>

    <bean class="org.haiku.haikudepotserver.support.cayenne.QueryCacheRemoveGroupListener">
        <property name="group" value="#{T(org.haiku.haikudepotserver.dataobjects.HaikuDepot.CacheGroup).PKG.name()}"/>
        <property name="entityClass" value="org.haiku.haikudepotserver.dataobjects.Pkg"/>
    </bean>

    <bean class="org.haiku.haikudepotserver.support.cayenne.QueryCacheRemoveGroupListener">
        <property name="group" value="#{T(org.haiku.haikudepotserver.dataobjects.HaikuDepot.CacheGroup).REPOSITORY.name()}"/>
        <property name="entityClasses">
            <list>
                <value>org.haiku.haikudepotserver.dataobjects.Repository</value>
                <value>org.haiku.haikudepotserver.dataobjects.RepositorySource</value>
            </list>
        </property>
    </bean>

    <bean class="org.haiku.haikudepotserver.support.cayenne.QueryCacheRemoveGroupListener">
        <property name="groups" value="#{T(org.haiku.haikudepotserver.dataobjects.HaikuDepot.CacheGroup).PKG_ICON.name()}"/>
        <property name="entityClasses">
            <list>
                <value>org.haiku.haikudepotserver.dataobjects.PkgIcon</value>
                <value>org.haiku.haikudepotserver.dataobjects.PkgIconImage</value>
            </list>
        </property>
    </bean>

    <bean class="org.haiku.haikudepotserver.support.cayenne.QueryCacheRemoveGroupListener">
        <property name="group" value="#{T(org.haiku.haikudepotserver.dataobjects.HaikuDepot.CacheGroup).PKG_LOCALIZATION.name()}"/>
        <property name="entityClass" value="org.haiku.haikudepotserver.dataobjects.PkgLocalization"/>
    </bean>

    <bean class="org.haiku.haikudepotserver.support.cayenne.QueryCacheRemoveGroupListener">
        <property name="group" value="#{T(org.haiku.haikudepotserver.dataobjects.HaikuDepot.CacheGroup).PKG_VERSION_LOCALIZATION.name()}"/>
        <property name="entityClass" value="org.haiku.haikudepotserver.dataobjects.PkgVersionLocalization"/>
    </bean>

</beans>