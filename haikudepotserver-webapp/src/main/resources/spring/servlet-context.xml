<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <context:component-scan base-package="org.haiku.haikudepotserver">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
        <context:exclude-filter type="regex" expression="org\.haiku\.haikudepotserver\.support\.cayenne\..*"/>
    </context:component-scan>

    <mvc:annotation-driven/>

    <import resource="properties.xml"/>

    <mvc:resources mapping="/js/**" location="/js/" cache-period="0"/>
    <mvc:resources mapping="/webjars/**" location="/webjars/" />
    <mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/img/**" location="/img/" />
    <mvc:resources mapping="/docs/**" location="/docs/" />
    <mvc:resources mapping="favicon.ico" location="/img/favicon.ico" />

    <mvc:interceptors>
        <mvc:interceptor>

            <mvc:mapping path="/__**"/>
            <mvc:mapping path="/__**/*"/>
            <mvc:mapping path="/pkg**"/> <!-- TODO; remove - legacy -->
            <mvc:mapping path="/pkg**/*"/> <!-- TODO; remove - legacy -->

            <bean class="org.haiku.haikudepotserver.support.web.MetricsInterceptor">
                <property name="pathPrefixesForMetricsCapture">
                    <list>
                        <value>__maintenance</value>
                        <value>__pkgdownload</value>
                        <value>__pkgsearch</value>
                        <value>__pkgicon</value>
                        <value>pkgicon</value> <!-- TODO; remove - legacy -->
                        <value>__genericpkgicon</value>
                        <value>__pkgscreenshot</value>
                        <value>pkgscreenshot</value> <!-- TODO; remove - legacy -->
                        <value>__repository</value>
                    </list>
                </property>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix">
            <value>/WEB-INF/views/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>

    <bean id="localeResolver" class="org.haiku.haikudepotserver.multipage.MultipageLocaleResolver"/>

    <!--
    The presence of this will get the JSON-RPC APIs activated without needing
    to do it manually.  The invocation listener will handle logging of errors.
    -->

    <bean class="com.googlecode.jsonrpc4j.spring.AutoJsonRpcServiceImplExporter">
        <!-- don't log exceptions because they will be logged in the invocation listener -->
        <property name="shouldLogInvocationErrors" value="false"/>
        <!-- set the content type explicitly because otherwise it is application/json-rpc -->
        <property name="contentType" value="application/json"/>
        <!-- prevents spring from also logging the exception -->
        <property name="registerTraceInterceptor" value="false"/>
        <!-- allows hds control over how the exception is logged -->
        <property name="invocationListener">
            <bean class="com.googlecode.jsonrpc4j.MultipleInvocationListener">
                <constructor-arg>
                    <list>
                        <bean class="org.haiku.haikudepotserver.support.jsonrpc4j.ErrorLoggingInvocationListener"/>
                        <bean class="org.haiku.haikudepotserver.support.jsonrpc4j.MetricsInvocationListener" init-method="init">
                            <property name="metricRegistry" ref="metricRegistry"/>
                        </bean>
                    </list>
                </constructor-arg>
            </bean>
        </property>
        <property name="errorResolver">
            <bean class="org.haiku.haikudepotserver.api1.support.ErrorResolverImpl"/>
        </property>
        <property name="objectMapper">
            <bean class="org.haiku.haikudepotserver.api1.support.ObjectMapperFactory"/>
        </property>
        <property name="httpStatusCodeProvider">
            <bean class="org.haiku.haikudepotserver.support.jsonrpc4j.HttpStatusCodeProvider"/>
        </property>
    </bean>

</beans>