<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">

    <import resource="properties.xml"/>
    <import resource="basic.xml"/>
    <import resource="basic-application.xml"/>

    <bean class="org.haiku.haikudepotserver.support.HttpRequestClientIdentifierSupplier"/>

    <!-- JOB-MANAGEMENT -->

    <bean class="org.haiku.haikudepotserver.job.LocalJobServiceImpl"
          init-method="startAsyncAndAwaitRunning"
          destroy-method="stopAsyncAndAwaitTerminated">
        <property name="jobDataStorageService">
            <bean class="org.haiku.haikudepotserver.storage.LocalDataStorageServiceImpl"></bean>
        </property>
    </bean>

    <!-- RECALCULATE DERIVED USER RATINGS -->

    <!--
    Processes the user rating requests for a package and store them into the
    package entity.
    -->

    <bean class="org.haiku.haikudepotserver.userrating.job.UserRatingDerivationJobRunner"/>

    <!--
    Picks up on Cayenne ORM events around user ratings and triggers the background update
    of the packages' user ratings.
    -->

    <bean class="org.haiku.haikudepotserver.support.cayenne.UserRatingDerivationTriggerListener"/>

    <!-- LDAP -->

    <!--
    Processes requests to synchronize the HDS database into LDAP
    -->

    <bean class="org.haiku.haikudepotserver.user.job.LdapSynchronizeUsersJobRunner"/>

    <!--
    Picks up on Cayenne ORM events around user changes so that LDAP can (optionally) be
    updated with changes.
    -->

    <bean class="org.haiku.haikudepotserver.support.cayenne.LdapUserUpdateListener"/>

    <!-- EMAIL -->

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${smtp.host}"/>
        <property name="port" value="${smtp.port:25}"/>
        <property name="username" value="${smtp.username:}"/>
        <property name="password" value="${smtp.password:}"/>
        <property name="protocol" value="smtp"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">${smtp.auth:false}</prop>
                <prop key="mail.smtp.starttls.enable">${smtp.starttls:false}</prop>
            </props>
        </property>
    </bean>

    <!-- JAWR; WEB RESOURCE COMPRESSION ETC... -->

    <bean id="jawrConfigProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="classpath:/jawr.properties"/>
        <property name="properties">
            <props>
                <prop key="jawr.debug.on">${jawr.debug.on:false}</prop>
                <prop key="jawr.factory.use.orphans.mapper">false</prop>
            </props>
        </property>
    </bean>

    <!-- SECURITY -->

    <bean id="authenticationFilter" class="org.haiku.haikudepotserver.security.AuthenticationFilter"/>

    <!-- LOGGING -->

    <bean id="loggingFilter" class="org.haiku.haikudepotserver.support.logging.LoggingFilter"/>

    <!-- SUNDRY -->

    <bean
            id="desktopApplicationMinimumVersionFilter"
            class="org.haiku.haikudepotserver.support.desktopapplication.DesktopApplicationMinimumVersionFilter"/>

    <!-- SINGLE PAGE TEMPLATE STATS -->

    <bean
            id="singlePageTemplateFrequencyMetricsFilter"
            class="org.haiku.haikudepotserver.singlepage.SinglePageTemplateFrequencyMetricsFilter">
        <property name="metrics" ref="singlePageTemplateFrequencyMetrics"></property>
    </bean>

    <bean
            class="org.springframework.web.context.support.ServletContextAttributeExporter">
        <property name="attributes">
            <map>
                <entry key="com.codahale.metrics.servlets.MetricsServlet.registry">
                    <ref bean="metricRegistry" />
                </entry>
                <entry key="com.codahale.metrics.servlets.HealthCheckServlet.registry">
                    <ref bean="healthCheckRegistry" />
                </entry>
            </map>
        </property>
    </bean>

    <!-- LOCALIZATION -->

    <util:list id="messageSourceBaseNames">
        <value>classpath:messages</value>
        <value>classpath:webmessages</value>
        <value>classpath:naturallanguagemessages</value>
    </util:list>

</beans>