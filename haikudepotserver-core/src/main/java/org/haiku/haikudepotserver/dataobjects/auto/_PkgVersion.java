package org.haiku.haikudepotserver.dataobjects.auto;

import java.sql.Timestamp;
import java.util.List;

import org.apache.cayenne.exp.Property;
import org.haiku.haikudepotserver.dataobjects.Architecture;
import org.haiku.haikudepotserver.dataobjects.Pkg;
import org.haiku.haikudepotserver.dataobjects.PkgVersionCopyright;
import org.haiku.haikudepotserver.dataobjects.PkgVersionLicense;
import org.haiku.haikudepotserver.dataobjects.PkgVersionLocalization;
import org.haiku.haikudepotserver.dataobjects.PkgVersionUrl;
import org.haiku.haikudepotserver.dataobjects.RepositorySource;
import org.haiku.haikudepotserver.dataobjects.support.AbstractDataObject;

/**
 * Class _PkgVersion was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _PkgVersion extends AbstractDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "id";

    public static final Property<Boolean> ACTIVE = Property.create("active", Boolean.class);
    public static final Property<Timestamp> CREATE_TIMESTAMP = Property.create("createTimestamp", Timestamp.class);
    public static final Property<Boolean> IS_LATEST = Property.create("isLatest", Boolean.class);
    public static final Property<String> MAJOR = Property.create("major", String.class);
    public static final Property<String> MICRO = Property.create("micro", String.class);
    public static final Property<String> MINOR = Property.create("minor", String.class);
    public static final Property<Timestamp> MODIFY_TIMESTAMP = Property.create("modifyTimestamp", Timestamp.class);
    public static final Property<Long> PAYLOAD_LENGTH = Property.create("payloadLength", Long.class);
    public static final Property<String> PRE_RELEASE = Property.create("preRelease", String.class);
    public static final Property<Integer> REVISION = Property.create("revision", Integer.class);
    public static final Property<Long> VIEW_COUNTER = Property.create("viewCounter", Long.class);
    public static final Property<Architecture> ARCHITECTURE = Property.create("architecture", Architecture.class);
    public static final Property<Pkg> PKG = Property.create("pkg", Pkg.class);
    public static final Property<List<PkgVersionCopyright>> PKG_VERSION_COPYRIGHTS = Property.create("pkgVersionCopyrights", List.class);
    public static final Property<List<PkgVersionLicense>> PKG_VERSION_LICENSES = Property.create("pkgVersionLicenses", List.class);
    public static final Property<List<PkgVersionLocalization>> PKG_VERSION_LOCALIZATIONS = Property.create("pkgVersionLocalizations", List.class);
    public static final Property<List<PkgVersionUrl>> PKG_VERSION_URLS = Property.create("pkgVersionUrls", List.class);
    public static final Property<RepositorySource> REPOSITORY_SOURCE = Property.create("repositorySource", RepositorySource.class);

    public void setActive(Boolean active) {
        writeProperty("active", active);
    }
    public Boolean getActive() {
        return (Boolean)readProperty("active");
    }

    public void setCreateTimestamp(Timestamp createTimestamp) {
        writeProperty("createTimestamp", createTimestamp);
    }
    public Timestamp getCreateTimestamp() {
        return (Timestamp)readProperty("createTimestamp");
    }

    public void setIsLatest(Boolean isLatest) {
        writeProperty("isLatest", isLatest);
    }
    public Boolean getIsLatest() {
        return (Boolean)readProperty("isLatest");
    }

    public void setMajor(String major) {
        writeProperty("major", major);
    }
    public String getMajor() {
        return (String)readProperty("major");
    }

    public void setMicro(String micro) {
        writeProperty("micro", micro);
    }
    public String getMicro() {
        return (String)readProperty("micro");
    }

    public void setMinor(String minor) {
        writeProperty("minor", minor);
    }
    public String getMinor() {
        return (String)readProperty("minor");
    }

    public void setModifyTimestamp(Timestamp modifyTimestamp) {
        writeProperty("modifyTimestamp", modifyTimestamp);
    }
    public Timestamp getModifyTimestamp() {
        return (Timestamp)readProperty("modifyTimestamp");
    }

    public void setPayloadLength(Long payloadLength) {
        writeProperty("payloadLength", payloadLength);
    }
    public Long getPayloadLength() {
        return (Long)readProperty("payloadLength");
    }

    public void setPreRelease(String preRelease) {
        writeProperty("preRelease", preRelease);
    }
    public String getPreRelease() {
        return (String)readProperty("preRelease");
    }

    public void setRevision(Integer revision) {
        writeProperty("revision", revision);
    }
    public Integer getRevision() {
        return (Integer)readProperty("revision");
    }

    public void setViewCounter(Long viewCounter) {
        writeProperty("viewCounter", viewCounter);
    }
    public Long getViewCounter() {
        return (Long)readProperty("viewCounter");
    }

    public void setArchitecture(Architecture architecture) {
        setToOneTarget("architecture", architecture, true);
    }

    public Architecture getArchitecture() {
        return (Architecture)readProperty("architecture");
    }


    public void setPkg(Pkg pkg) {
        setToOneTarget("pkg", pkg, true);
    }

    public Pkg getPkg() {
        return (Pkg)readProperty("pkg");
    }


    public void addToPkgVersionCopyrights(PkgVersionCopyright obj) {
        addToManyTarget("pkgVersionCopyrights", obj, true);
    }
    public void removeFromPkgVersionCopyrights(PkgVersionCopyright obj) {
        removeToManyTarget("pkgVersionCopyrights", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PkgVersionCopyright> getPkgVersionCopyrights() {
        return (List<PkgVersionCopyright>)readProperty("pkgVersionCopyrights");
    }


    public void addToPkgVersionLicenses(PkgVersionLicense obj) {
        addToManyTarget("pkgVersionLicenses", obj, true);
    }
    public void removeFromPkgVersionLicenses(PkgVersionLicense obj) {
        removeToManyTarget("pkgVersionLicenses", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PkgVersionLicense> getPkgVersionLicenses() {
        return (List<PkgVersionLicense>)readProperty("pkgVersionLicenses");
    }


    public void addToPkgVersionLocalizations(PkgVersionLocalization obj) {
        addToManyTarget("pkgVersionLocalizations", obj, true);
    }
    public void removeFromPkgVersionLocalizations(PkgVersionLocalization obj) {
        removeToManyTarget("pkgVersionLocalizations", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PkgVersionLocalization> getPkgVersionLocalizations() {
        return (List<PkgVersionLocalization>)readProperty("pkgVersionLocalizations");
    }


    public void addToPkgVersionUrls(PkgVersionUrl obj) {
        addToManyTarget("pkgVersionUrls", obj, true);
    }
    public void removeFromPkgVersionUrls(PkgVersionUrl obj) {
        removeToManyTarget("pkgVersionUrls", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PkgVersionUrl> getPkgVersionUrls() {
        return (List<PkgVersionUrl>)readProperty("pkgVersionUrls");
    }


    public void setRepositorySource(RepositorySource repositorySource) {
        setToOneTarget("repositorySource", repositorySource, true);
    }

    public RepositorySource getRepositorySource() {
        return (RepositorySource)readProperty("repositorySource");
    }


}
