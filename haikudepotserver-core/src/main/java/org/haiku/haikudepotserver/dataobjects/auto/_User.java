package org.haiku.haikudepotserver.dataobjects.auto;

import java.util.Date;
import java.util.List;

import org.haiku.haikudepotserver.dataobjects.NaturalLanguage;
import org.haiku.haikudepotserver.dataobjects.PermissionUserPkg;
import org.haiku.haikudepotserver.dataobjects.UserPasswordResetToken;
import org.haiku.haikudepotserver.dataobjects.support.AbstractDataObject;

/**
 * Class _User was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _User extends AbstractDataObject {

    public static final String ACTIVE_PROPERTY = "active";
    public static final String CAN_MANAGE_USERS_PROPERTY = "canManageUsers";
    public static final String CREATE_TIMESTAMP_PROPERTY = "createTimestamp";
    public static final String EMAIL_PROPERTY = "email";
    public static final String IS_ROOT_PROPERTY = "isRoot";
    public static final String MODIFY_TIMESTAMP_PROPERTY = "modifyTimestamp";
    public static final String NICKNAME_PROPERTY = "nickname";
    public static final String PASSWORD_HASH_PROPERTY = "passwordHash";
    public static final String PASSWORD_SALT_PROPERTY = "passwordSalt";
    public static final String NATURAL_LANGUAGE_PROPERTY = "naturalLanguage";
    public static final String PERMISSION_USER_PKGS_PROPERTY = "permissionUserPkgs";
    public static final String USER_PASSWORD_RESET_TOKENS_PROPERTY = "userPasswordResetTokens";

    public static final String ID_PK_COLUMN = "id";

    public void setActive(Boolean active) {
        writeProperty(ACTIVE_PROPERTY, active);
    }
    public Boolean getActive() {
        return (Boolean)readProperty(ACTIVE_PROPERTY);
    }

    public void setCanManageUsers(Boolean canManageUsers) {
        writeProperty(CAN_MANAGE_USERS_PROPERTY, canManageUsers);
    }
    public Boolean getCanManageUsers() {
        return (Boolean)readProperty(CAN_MANAGE_USERS_PROPERTY);
    }

    public void setCreateTimestamp(Date createTimestamp) {
        writeProperty(CREATE_TIMESTAMP_PROPERTY, createTimestamp);
    }
    public Date getCreateTimestamp() {
        return (Date)readProperty(CREATE_TIMESTAMP_PROPERTY);
    }

    public void setEmail(String email) {
        writeProperty(EMAIL_PROPERTY, email);
    }
    public String getEmail() {
        return (String)readProperty(EMAIL_PROPERTY);
    }

    public void setIsRoot(Boolean isRoot) {
        writeProperty(IS_ROOT_PROPERTY, isRoot);
    }
    public Boolean getIsRoot() {
        return (Boolean)readProperty(IS_ROOT_PROPERTY);
    }

    public void setModifyTimestamp(Date modifyTimestamp) {
        writeProperty(MODIFY_TIMESTAMP_PROPERTY, modifyTimestamp);
    }
    public Date getModifyTimestamp() {
        return (Date)readProperty(MODIFY_TIMESTAMP_PROPERTY);
    }

    public void setNickname(String nickname) {
        writeProperty(NICKNAME_PROPERTY, nickname);
    }
    public String getNickname() {
        return (String)readProperty(NICKNAME_PROPERTY);
    }

    public void setPasswordHash(String passwordHash) {
        writeProperty(PASSWORD_HASH_PROPERTY, passwordHash);
    }
    public String getPasswordHash() {
        return (String)readProperty(PASSWORD_HASH_PROPERTY);
    }

    public void setPasswordSalt(String passwordSalt) {
        writeProperty(PASSWORD_SALT_PROPERTY, passwordSalt);
    }
    public String getPasswordSalt() {
        return (String)readProperty(PASSWORD_SALT_PROPERTY);
    }

    public void setNaturalLanguage(NaturalLanguage naturalLanguage) {
        setToOneTarget(NATURAL_LANGUAGE_PROPERTY, naturalLanguage, true);
    }

    public NaturalLanguage getNaturalLanguage() {
        return (NaturalLanguage)readProperty(NATURAL_LANGUAGE_PROPERTY);
    }


    public void addToPermissionUserPkgs(PermissionUserPkg obj) {
        addToManyTarget(PERMISSION_USER_PKGS_PROPERTY, obj, true);
    }
    public void removeFromPermissionUserPkgs(PermissionUserPkg obj) {
        removeToManyTarget(PERMISSION_USER_PKGS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PermissionUserPkg> getPermissionUserPkgs() {
        return (List<PermissionUserPkg>)readProperty(PERMISSION_USER_PKGS_PROPERTY);
    }


    public void addToUserPasswordResetTokens(UserPasswordResetToken obj) {
        addToManyTarget(USER_PASSWORD_RESET_TOKENS_PROPERTY, obj, true);
    }
    public void removeFromUserPasswordResetTokens(UserPasswordResetToken obj) {
        removeToManyTarget(USER_PASSWORD_RESET_TOKENS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<UserPasswordResetToken> getUserPasswordResetTokens() {
        return (List<UserPasswordResetToken>)readProperty(USER_PASSWORD_RESET_TOKENS_PROPERTY);
    }


    protected abstract void onPostAdd();

}
